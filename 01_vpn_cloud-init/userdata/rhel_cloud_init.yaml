#cloud-config
timezone: Asia/Tokyo
# ホスト名上書き防止
hostname: ${fqdn}
fqdn: ${fqdn}
preserve_hostname: false
# --- SSH 公開鍵 ---
ssh_authorized_keys: 
  - ${ssh_authorized_keys}
# コンソールのためのパスワード設定
password: ${password}
chpasswd: {expire: false}
# packages フェーズ(update,upgrade を実行すると完了までは時間がかかる)
package_update: false
package_upgrade: false
packages: 
  - nginx
  - stress-ng
# --- 起動後処理（順序が重要）---
bootcmd: 
  ## 静的IP/DNSを NetworkManager に適用（既存の System eth0 を直接更新）
  - nmcli -t -f NAME con show | grep -qx 'System eth0' || nmcli con add type ethernet ifname eth0 con-name 'System eth0'
  - nmcli con mod 'System eth0' ipv4.addresses '${nic1ip}/${nic1cidr}' ipv4.gateway '${defaultgateway}' ipv4.dns '${dns1}, ${dns2}' ipv4.method manual ipv6.method ignore
  ## 反映（down→up が必要）
  - nmcli con down 'System eth0' || true
  - nmcli con up   'System eth0'
  ## 2個めのインターフェース設定
  #- nmcli -t -f NAME con show | grep -qx 'System eth1' || nmcli con add type ethernet ifname eth1 con-name 'System eth1'
  #- nmcli con mod 'System eth1' ipv4.addresses '${nic2ip}/${nic2cidr}' ipv4.method manual ipv4.never-default yes ipv6.method ignore
  ### --- System eth1 に永続ルートを追加（次ホップは switch02 の VIP） ---
  #- nmcli con mod 'System eth1' +ipv4.routes '${vpnnetwork}/${vpncidr} ${vpnnexthop}'
  ### 反映（down→up が必要）
  #- nmcli con down 'System eth1' || true
  #- nmcli con up   'System eth1'
  ## DSR: VIP を dummy インターフェースに付与
  - nmcli connection add type dummy ifname vip01 con-name vip01 ipv4.method manual ipv4.addresses '${vip1}/32' ipv6.method ignore
  ## DSR: ARP 抑制を sysctl に設定
  - printf "net.ipv4.conf.all.arp_ignore = 1\nnet.ipv4.conf.all.arp_announce = 2\n" > /etc/sysctl.d/99-arp-dsr.conf
  - sysctl --system || sysctl -p || true
  # 少し待つ（DNS/ルート確立）
  - sleep 3
runcmd: 
  # NTP
  - grep -q '^server ntp1.sakura.ad.jp iburst' /etc/chrony.conf || echo 'server ntp1.sakura.ad.jp iburst' >> /etc/chrony.conf
  - systemctl restart chronyd
  - chronyc sources || true
  # nginx
  - systemctl enable --now nginx
  - DOCROOT=/usr/share/nginx/html; [ -d /var/www/html ] && DOCROOT=/var/www/html
  - hostname > $DOCROOT/index.html


